<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>career on</title><link>https://nirantk.com/tags/career/</link><description>Recent content in career on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 12 Feb 2022 00:09:00 +0530</lastBuildDate><atom:link href="https://nirantk.com/tags/career/index.xml" rel="self" type="application/rss+xml"/><item><title>Beyond First 90 Days</title><link>https://nirantk.com/writing/beyond-first-90-days/</link><pubDate>Sat, 12 Feb 2022 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/beyond-first-90-days/</guid><description>This one&amp;rsquo;s gonna be brief and echoes 2 Less Obvious Ideas to the younger me.
I am assuming that you already know the hygiene factors: Make few promises. Keep most of them and exceed few of them atleast. Get to like the top 5% in the skill of effort estimation for your own work at the very least. And so on.
Contribute to Developer Ecosystem #
Improving any part of the developer ecosystem is useful and visible at the same time.</description></item><item><title>Why I Quit Data Science</title><link>https://nirantk.com/writing/why-i-quit-data-science/</link><pubDate>Sun, 09 Jan 2022 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/why-i-quit-data-science/</guid><description>Question from a friend: I am interested in knowing how did you come to this decision of moving to SWE from DS/MLE. Since I&amp;rsquo;ve been asked a variant of this question quite a few times, I thought it would be good to share my answer.
What kind of research did you do to get to this decision? #
I spoke to a lot of people who were both big companies and startups.</description></item><item><title>Anti Skills</title><link>https://nirantk.com/writing/antiskill/</link><pubDate>Wed, 15 Dec 2021 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/antiskill/</guid><description>You learn a well-paying skill and years later - it comes back to hurt you in unexpected ways. That&amp;rsquo;s an Anti Skill.
Consider this hypothetical: You start your software engineering career and build a reputation as someone who is good at iOS development. Each year, the money you make keeps improving as you keep getting better at it.
The downside? You&amp;rsquo;ll find it hard to get job offers outside of iOS development [1]</description></item><item><title>Breaking into NLP</title><link>https://nirantk.com/writing/breaking-into-nlp/</link><pubDate>Tue, 07 Dec 2021 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/breaking-into-nlp/</guid><description>Bulk of this is borrowed from notes made my teammate and friend at Verloop.io&amp;rsquo;s NLP/ML team of our conversations. I&amp;rsquo;ve taken the liberty to remove our internal slang and some boring stuff.
I want to build a community around me on NLP. How can I get discovered by others?
Broadly speaking, the aim in forming connections can be split into Long Term and Short term. A short term aim would be where you can receive something immediate out of the connections or a particular connection itself.</description></item><item><title>First 90 Days - Software Engineer Version</title><link>https://nirantk.com/writing/first-90-days-engineer-version/</link><pubDate>Sat, 12 Sep 2020 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/first-90-days-engineer-version/</guid><description>Aditya Ankur, asked me:
I know that there is a book for the first 90 days as an executive. Is there something similar for programmers?
I don&amp;rsquo;t quite know of a book/essay which covers this yet sticks to the question. So I am writing one for him.
The First 90 Days for a New Engineer #
I expect each step to take roughly between 10 and 30 days, depending on the pace of your project + size of the team.</description></item><item><title>Verloop NLP Interview Prep Guide</title><link>https://nirantk.com/writing/verloop-ml-prep-guide/</link><pubDate>Sat, 29 Aug 2020 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/verloop-ml-prep-guide/</guid><description>Update, September 2021: This guide is a little outdated, but not obsolete. I no longer work at Verloop.io.
Preparation Guide #
I&amp;rsquo;ve been an early Machine Learning Engineer at Verloop.io for almost 1.5 years, primarily working on NLP problems and now more in an Engineering Manager-ish role.
This is the guide which I sometimes send to our candidates after they submit the Programming Challenge. If a candidate has relevant open source code sample, specially to other repositories we may choose to waive off the Programming Challenge completely.</description></item><item><title>Talent Cooling</title><link>https://nirantk.com/writing/talentcooling/</link><pubDate>Fri, 14 Aug 2020 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/talentcooling/</guid><description>Talent Cooling Kills Startup Growth #
Evaporative Cooling of talent occurs when the most high-value contributors to a community realize that the community is no longer serving their needs anymore and, therefore, leave.
Then something remarkably interesting happens:
When that happens, it drops the general quality of the community down such that the next most high-value contributors now find the community underwhelming. Each layer of disappearances slowly reduces the average quality of the group until such a point that you reach the people who are so unskilled and unaware of it that they’re unable to tell that they’re part of a mediocre group.</description></item><item><title>Standing Out at Work</title><link>https://nirantk.com/writing/standout/</link><pubDate>Sun, 07 Jun 2020 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/standout/</guid><description>In my short career, I&amp;rsquo;ve seen some amazing young people stand out at work.
Here is what they did, organized by 5 themes:
Unlock Knowledge
Automate Boring Stuff
Write Widely
Solve Open Problems
Outside-Visible Work
Unlock Knowledge #
Expertise and know-how stay trapped in emails, docs and codebases. Unlock this for everyone else.
Get your Star Salesman on an internal podcast to spill their secrets. Do email interviews with your tech leaders and PMs.</description></item><item><title>Act Like You're 35</title><link>https://nirantk.com/writing/actlike35/</link><pubDate>Sat, 07 Dec 2019 00:09:00 +0530</pubDate><guid>https://nirantk.com/writing/actlike35/</guid><description>Don’t just network with people your own age #
Beware the whiz kid syndrome. Smart, young people have a habit of forming communities of other smart young people and feeding off each other’s energy. Argghhhh. Are you not just making mistakes made by older people again? Make original mistakes
Youth enclaves can actually be restrictive. In fact their networking should be about meeting useful mentors and career champions who can open doors and fast track careers.</description></item><item><title>Thinking of Your Career as a Startup</title><link>https://nirantk.com/writing/ruleof40/</link><pubDate>Fri, 29 Nov 2019 00:00:18 +0530</pubDate><guid>https://nirantk.com/writing/ruleof40/</guid><description>Broadly speaking, it’s useful to think of your career as a startup.
Your profit+growth percentage should be a minimum 40%
So say, you join a big company like Microsoft and your skills grow at 20% every year, while your pay only grows 10% - that&amp;rsquo;s bad.
You need to grow your skills and outcomes faster.
The other extreme is also fine: You join a small startup which can make great use of entrepreneurial DNA plus specific skills.</description></item></channel></rss>